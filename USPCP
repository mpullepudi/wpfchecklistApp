Command search through
----------------------
using System;
using System.Diagnostics;

class Program
{
    static void Main(string[] args)
    {
        // Step 1: Run GPUpdate /force
        DateTime gpUpdateStartTime = RunGPUpdate();

        // Step 2: Check Event Viewer for success events after gpupdate is completed
        CheckEventViewer(gpUpdateStartTime);
    }

    static DateTime RunGPUpdate()
    {
        DateTime startTime = DateTime.Now;

        try
        {
            Process gpUpdateProcess = new Process();
            gpUpdateProcess.StartInfo.FileName = "cmd.exe";
            gpUpdateProcess.StartInfo.Arguments = "/c gpupdate /force";
            gpUpdateProcess.StartInfo.RedirectStandardOutput = true;
            gpUpdateProcess.StartInfo.UseShellExecute = false;
            gpUpdateProcess.StartInfo.CreateNoWindow = true;

            Console.WriteLine("Running GPUpdate /force...");
            startTime = DateTime.Now;  // Capture the time just before starting the process
            gpUpdateProcess.Start();
            gpUpdateProcess.WaitForExit();

            Console.WriteLine("GPUpdate completed.");
        }
        catch (Exception ex)
        {
            Console.WriteLine("Error while running GPUpdate: " + ex.Message);
        }

        return startTime;
    }

    static void CheckEventViewer(DateTime gpUpdateStartTime)
    {
        // Check Application Log for User and Machine Policy success events
        string logName = "Application";
        int userPolicyEventID = 1502;
        int machinePolicyEventID = 1503;

        try
        {
            using (EventLog eventLog = new EventLog(logName))
            {
                bool userPolicySuccess = false;
                bool machinePolicySuccess = false;

                Console.WriteLine("Checking Event Viewer for success events after GPUpdate started at: " + gpUpdateStartTime);

                foreach (EventLogEntry entry in eventLog.Entries)
                {
                    // Filter events that occurred after gpupdate was initiated
                    if (entry.TimeGenerated > gpUpdateStartTime)
                    {
                        if (entry.InstanceId == userPolicyEventID)
                        {
                            Console.WriteLine("User Policy applied successfully. Event ID: " + userPolicyEventID);
                            userPolicySuccess = true;
                        }
                        else if (entry.InstanceId == machinePolicyEventID)
                        {
                            Console.WriteLine("Machine Policy applied successfully. Event ID: " + machinePolicyEventID);
                            machinePolicySuccess = true;
                        }

                        if (userPolicySuccess && machinePolicySuccess)
                        {
                            break; // Exit loop once both events are found
                        }
                    }
                }

                if (!userPolicySuccess)
                {
                    Console.WriteLine("User Policy success event not found.");
                }
                if (!machinePolicySuccess)
                {
                    Console.WriteLine("Machine Policy success event not found.");
                }
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine("Error while checking Event Viewer: " + ex.Message);
        }
    }
}



GPUpdate 
--------

using System;
using System.Diagnostics;

class Program
{
    static void Main(string[] args)
    {
        // Step 1: Run GPUpdate /force
        DateTime gpUpdateStartTime = RunGPUpdate();

        // Step 2: Check Event Viewer for success events after gpupdate is completed
        CheckEventViewer(gpUpdateStartTime);
    }

    static DateTime RunGPUpdate()
    {
        DateTime startTime = DateTime.Now;

        try
        {
            Process gpUpdateProcess = new Process();
            gpUpdateProcess.StartInfo.FileName = "cmd.exe";
            gpUpdateProcess.StartInfo.Arguments = "/c gpupdate /force";
            gpUpdateProcess.StartInfo.RedirectStandardOutput = true;
            gpUpdateProcess.StartInfo.UseShellExecute = false;
            gpUpdateProcess.StartInfo.CreateNoWindow = true;

            Console.WriteLine("Running GPUpdate /force...");
            startTime = DateTime.Now;  // Capture the time just before starting the process
            gpUpdateProcess.Start();
            gpUpdateProcess.WaitForExit();

            Console.WriteLine("GPUpdate completed.");
        }
        catch (Exception ex)
        {
            Console.WriteLine("Error while running GPUpdate: " + ex.Message);
        }

        return startTime;
    }

    static void CheckEventViewer(DateTime gpUpdateStartTime)
    {
        // Check Application Log for User and Machine Policy success events
        string logName = "Application";
        int userPolicyEventID = 1502;
        int machinePolicyEventID = 1503;

        try
        {
            using (EventLog eventLog = new EventLog(logName))
            {
                bool userPolicySuccess = false;
                bool machinePolicySuccess = false;

                Console.WriteLine("Checking Event Viewer for success events after GPUpdate started at: " + gpUpdateStartTime);

                foreach (EventLogEntry entry in eventLog.Entries)
                {
                    // Filter events that occurred after gpupdate was initiated
                    if (entry.TimeGenerated > gpUpdateStartTime)
                    {
                        if (entry.InstanceId == userPolicyEventID)
                        {
                            Console.WriteLine("User Policy applied successfully. Event ID: " + userPolicyEventID);
                            userPolicySuccess = true;
                        }
                        else if (entry.InstanceId == machinePolicyEventID)
                        {
                            Console.WriteLine("Machine Policy applied successfully. Event ID: " + machinePolicyEventID);
                            machinePolicySuccess = true;
                        }

                        if (userPolicySuccess && machinePolicySuccess)
                        {
                            break; // Exit loop once both events are found
                        }
                    }
                }

                if (!userPolicySuccess)
                {
                    Console.WriteLine("User Policy success event not found.");
                }
                if (!machinePolicySuccess)
                {
                    Console.WriteLine("Machine Policy success event not found.");
                }
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine("Error while checking Event Viewer: " + ex.Message);
        }
    }
}
