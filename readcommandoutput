using System;
using System.Diagnostics;

class Program
{
    static void Main(string[] args)
    {
        string command = "your_command_here"; // Replace with the actual command you want to run
        string delimiter = ":";               // Replace with the actual delimiter
        int position = 2;                     // Replace with the position you want to check (0-based index)
        string searchString = "expected_value"; // Replace with the value you are searching for

        bool result = RunCommandAndCheckOutput(command, delimiter, position, searchString);

        Console.WriteLine("Result: " + result);
    }

    static bool RunCommandAndCheckOutput(string command, string delimiter, int position, string searchString)
    {
        try
        {
            Process process = new Process();
            process.StartInfo.FileName = "cmd.exe";
            process.StartInfo.Arguments = "/c " + command; // Run the command in cmd.exe
            process.StartInfo.RedirectStandardOutput = true;
            process.StartInfo.UseShellExecute = false;
            process.StartInfo.CreateNoWindow = true;

            process.Start();
            string output = process.StandardOutput.ReadToEnd();
            process.WaitForExit();

            Console.WriteLine("Command Output:\n" + output);

            // Split the output using the specified delimiter
            string[] outputParts = output.Split(new string[] { delimiter }, StringSplitOptions.None);

            // Check if the position is within bounds and if the value at the position matches the search string
            if (position < outputParts.Length)
            {
                string valueAtPosition = outputParts[position].Trim(); // Trim any leading/trailing whitespace
                Console.WriteLine("Value at position: " + valueAtPosition);

                if (valueAtPosition.Equals(searchString, StringComparison.OrdinalIgnoreCase))
                {
                    return true; // Return true if the value matches the search string
                }
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine("Error while running command: " + ex.Message);
        }

        return false; // Return false if the value does not match or if there was an error
    }
}


using System;
using System.Diagnostics;

class Program
{
    static void Main(string[] args)
    {
        string command = "your_command_here"; // Replace with the actual command you want to run
        string delimiter = ":";               // Replace with the actual delimiter
        int position = 2;                     // Replace with the position you want to check (0-based index)
        string searchString = "expected_value"; // Replace with the value you are searching for

        bool result = RunCommandAndCheckOutput(command, delimiter, position, searchString);

        Console.WriteLine("Result: " + result);
    }

    static bool RunCommandAndCheckOutput(string command, string delimiter, int position, string searchString)
    {
        try
        {
            Process process = new Process();
            process.StartInfo.FileName = "cmd.exe";
            process.StartInfo.Arguments = "/c " + command; // Run the command in cmd.exe
            process.StartInfo.RedirectStandardOutput = true;
            process.StartInfo.UseShellExecute = false;
            process.StartInfo.CreateNoWindow = true;

            process.Start();
            string output = process.StandardOutput.ReadToEnd();
            process.WaitForExit();

            Console.WriteLine("Command Output:\n" + output);

            // Split the output using the specified delimiter
            string[] outputParts = output.Split(new string[] { delimiter }, StringSplitOptions.None);

            // Check if the position is within bounds and if the value at the position matches the search string
            if (position < outputParts.Length)
            {
                string valueAtPosition = outputParts[position].Trim(); // Trim any leading/trailing whitespace
                Console.WriteLine("Value at position: " + valueAtPosition);

                if (valueAtPosition.Equals(searchString, StringComparison.OrdinalIgnoreCase))
                {
                    return true; // Return true if the value matches the search string
                }
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine("Error while running command: " + ex.Message);
        }

        return false; // Return false if the value does not match or if there was an error
    }
}
